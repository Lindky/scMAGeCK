// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _scMAGeCK_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// call_rra
int call_rra(std::vector<std::string>& RRA_parameters);
RcppExport SEXP _scMAGeCK_call_rra(SEXP RRA_parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string>& >::type RRA_parameters(RRA_parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(call_rra(RRA_parameters));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scMAGeCK_rcpp_hello_world", (DL_FUNC) &_scMAGeCK_rcpp_hello_world, 0},
    {"_scMAGeCK_call_rra", (DL_FUNC) &_scMAGeCK_call_rra, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_scMAGeCK(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
